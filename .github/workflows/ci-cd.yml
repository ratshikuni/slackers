name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: '${{ secrets.GCP_PROJECT_ID }}'
  REGION: 'us-central1'
  SERVICE: 'flask-app'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Authenticate using the service account JSON key from secrets
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Docker authentication using the auth token
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
          registry: '${{ env.REGION }}-docker.pkg.dev'

      # Build and push the Docker image to Google Artifact Registry
      - name: 'Build and Push Docker Image'
        run: |-
          IMAGE_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/flask-app/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "${IMAGE_TAG}" .
          docker push "${IMAGE_TAG}"

      - name: Set up GCP Credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" > $GITHUB_WORKSPACE/gcp-key.json

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/flask-app/${{ env.SERVICE }}:${{ github.sha }}"
          env_vars: 'FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }},FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }},FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }},FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }},FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }},FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }},FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }},GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/gcp-key.json'

      - name: Remove GCP Credentials
        run: rm -f $GITHUB_WORKSPACE/gcp-key.json